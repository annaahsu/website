---
import ButtonBar from '@components/buttonbar.astro';
import ButtonTag from '@components/buttontag.astro';

export interface Props {
  title: string;
  date: string;
  description: string;
  url: string;
  tags: string[];
}
const { title, date, description, url, tags } = Astro.props;

const newDate = new Date(date);
const options = { year: 'numeric', month: 'long', day: 'numeric' };
const formatDate = newDate.toLocaleDateString('en-US', options);
---

<!-- when I have a masonry solution (or when grid masonry comes out!) remember to clean up the content class flex -->

<article class="card">
  <a class="cardlink" href={url} target="_blank">
    <div class="content">
      <div class="text">
        <div class="header">
          <h2 class="title">{title}</h2>
          <span class="date">{formatDate}</span>
        </div>
        <p>{description}</p>
      </div>
      <ButtonBar>
        {tags.map((tag) => (
        <ButtonTag>{tag}</ButtonTag>
        ))}
      </ButtonBar>
    </div>
  </a>
</article>

<style lang="scss">
  .card:hover {
    transform: scale(1.01);
    transition: 0.5s;
  }

  .cardlink {
    color: inherit;
    text-decoration: none;
    box-shadow: none;
    padding: 0px;
    transition: none;
    font-weight: inherit;
  }

  .cardlink:hover {
    background: none;
  }

  .content {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 24px;
    background-color: var(--white);
    box-shadow: var(--carddrop);
    height: 100%;
  }

  .date {
    font-style: oblique;
  }

  .header {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .text {
    display: flex;
    flex-direction: column;
    gap: 16px;
    flex: 5;

    p {
      margin-bottom: 16px;
    }
  }

  .title {
    margin-bottom: 0;
  }
</style>
